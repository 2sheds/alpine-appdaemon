#!/bin/bash -xe

. ./hooks/env

ARCH_LIST="amd64 $(ls -1 Dockerfile.* | sed 's|Dockerfile.||')"
IMAGE_LIST=""
for i in ${ARCH_LIST}; do
  IMAGE_LIST="${IMAGE_LIST}${IMAGE_PREFIX}-${i} "
done

: ${PA_TOKEN:?PA_TOKEN not configured} ${PA_USER:?PA_USER not configured}
${DOCKER_CLI} login -u "${PA_USER}" -p "${PA_TOKEN}" >/dev/null 2>&1
# Obtain JWT for authorization
JW_TOKEN=$(curl -s -H "Content-Type: application/json" \
  -X POST -d "{\"username\": \"$PA_USER\", \"password\": \"$PA_TOKEN\"}" \
  https://hub.docker.com/v2/users/login/ | python -c "import sys, json; print json.load(sys.stdin)['token']")

function manifest_annotate {
  ${DOCKER_CLI} manifest annotate $1 ${IMAGE_PREFIX}-arm --os linux --arch "arm" --variant "7"
  ${DOCKER_CLI} manifest annotate $1 ${IMAGE_PREFIX}-arm64 --os linux --arch "arm64" --variant "8"
}

${DOCKER_CLI} manifest create --amend ${IMAGE_PREFIX} ${IMAGE_LIST} || exit 0
manifest_annotate "${IMAGE_PREFIX}"
${DOCKER_CLI} manifest push -p "${IMAGE_PREFIX}"
if [ "${TAG_PREFIX}" != "latest" ]; then
  ${DOCKER_CLI} manifest create --amend "${IMAGE_PREFIX%.*}" ${IMAGE_LIST}
  manifest_annotate "${IMAGE_PREFIX%.*}"
  ${DOCKER_CLI} manifest push -p "${IMAGE_PREFIX%.*}"
  ${DOCKER_CLI} manifest create --amend "${DOCKER_REPO}:latest" ${IMAGE_LIST}
  manifest_annotate "${DOCKER_REPO}:latest"
  ${DOCKER_CLI} manifest push -p "${DOCKER_REPO}:latest"
  echo "All images pushed successfully, cleaning up tags."
  # Clean up tags
  for i in ${ARCH_LIST}; do
    curl -s -H "Authorization: JWT ${JW_TOKEN}" -X DELETE "https://hub.docker.com/v2/repositories/${REPO}/tags/${TAG_PREFIX}-${i}/"
  done
fi

