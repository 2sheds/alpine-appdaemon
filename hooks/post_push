#!/bin/bash

# Use manifest-tool to create the manifest, given the experimental
# "docker manifest" command isn't available yet on Docker Hub.

curl -Lo manifest-tool https://github.com/estesp/manifest-tool/releases/download/v1.0.0/manifest-tool-linux-amd64
chmod +x manifest-tool

MAIN_TAG=$(echo "$DOCKER_TAG" | cut -d '-' -f 1 | grep '\.')

if [ ! -z "$MAIN_TAG" ]; then 
  MAJMIN_VER=$(echo "$MAIN_TAG" | cut -d '.' -f 1,2 -s)
  TAGS=$(echo ", \"${MAJMIN_VER}\", \"${MAIN_TAG}\"" | sed -e 's/[]\/$*.^[]/\\&/g')
  MAIN_VER=$(echo "$MAIN_TAG" | sed -e 's/[]\/$*.^[]/\\&/g')
  sed -i "s/\([a-z0-9]\+\)\-latest/$MAIN_VER\-\1/g; s/\(\"latest\"\)/\1$TAGS/g; s/\:latest/\:$MAIN_VER/g" manifest.yaml
fi

./manifest-tool push from-spec manifest.yaml 2> /dev/null
if [ $? -eq 0 ]; then
  if [ -z "$MAIN_TAG" ]; then
    echo "No cleanup for 'latest' tags"
    exit 0
  fi
  if [ -z "$PA_TOKEN" ] || [ -z "$PA_USER" ]; then
    echo "Both PA_USER and PA_TOKEN envvars have to be configured"
    exit 0
  fi
  REPO=$(echo $DOCKER_REPO | cut -d "/" -f 2,3)
  TOKEN=$(curl -s -H "Content-Type: application/json" \
    -X POST -d '{"username": "'$PA_USER'", "password": "'$PA_TOKEN'"}' \
	https://hub.docker.com/v2/users/login/ | python -c "import sys, json; print json.load(sys.stdin)['token']")
  for i in "amd64" "arm64" "armhf"; do
    curl -s "https://hub.docker.com/v2/repositories/${REPO}/tags/${MAIN_TAG}-${i}/" -X DELETE -H "Authorization: JWT ${TOKEN}"
  done
  echo "All images pushed successfully, cleaning up tags."
else
  echo "Manifest images not complete, continuing."
  ./manifest-tool push from-spec --ignore-missing manifest.yaml
fi
